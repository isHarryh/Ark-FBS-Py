# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class enum__Torappu_TipData_Category(object):
    NONE = 0
    BATTLE = 1
    UI = 2
    BUILDING = 4
    GACHA = 8
    MISC = 16
    ALL = 31


class clz_Torappu_TipData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_TipData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_TipData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_TipData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_TipData
    def Tip(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_TipData
    def Weight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # clz_Torappu_TipData
    def Category(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_TipDataStart(builder):
    builder.StartObject(3)

def clz_Torappu_TipDataAddTip(builder, tip):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(tip), 0)

def clz_Torappu_TipDataAddWeight(builder, weight):
    builder.PrependFloat32Slot(1, weight, 0.0)

def clz_Torappu_TipDataAddCategory(builder, category):
    builder.PrependInt32Slot(2, category, 0)

def clz_Torappu_TipDataEnd(builder):
    return builder.EndObject()



class clz_Torappu_WorldViewTip(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_WorldViewTip()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_WorldViewTip(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_WorldViewTip
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_WorldViewTip
    def Title(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_WorldViewTip
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_WorldViewTip
    def BackgroundPicId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_WorldViewTip
    def Weight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def clz_Torappu_WorldViewTipStart(builder):
    builder.StartObject(4)

def clz_Torappu_WorldViewTipAddTitle(builder, title):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(title), 0)

def clz_Torappu_WorldViewTipAddDescription(builder, description):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)

def clz_Torappu_WorldViewTipAddBackgroundPicId(builder, backgroundPicId):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(backgroundPicId), 0)

def clz_Torappu_WorldViewTipAddWeight(builder, weight):
    builder.PrependFloat32Slot(3, weight, 0.0)

def clz_Torappu_WorldViewTipEnd(builder):
    return builder.EndObject()



class clz_Torappu_TipTable(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_TipTable()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_TipTable(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_TipTable
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_TipTable
    def Tips(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_TipData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_TipTable
    def TipsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_TipTable
    def TipsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # clz_Torappu_TipTable
    def WorldViewTips(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_WorldViewTip()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_TipTable
    def WorldViewTipsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_TipTable
    def WorldViewTipsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def clz_Torappu_TipTableStart(builder):
    builder.StartObject(2)

def clz_Torappu_TipTableAddTips(builder, tips):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(tips), 0)

def clz_Torappu_TipTableStartTipsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_TipTableAddWorldViewTips(builder, worldViewTips):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(worldViewTips), 0)

def clz_Torappu_TipTableStartWorldViewTipsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_TipTableEnd(builder):
    return builder.EndObject()

ROOT_TYPE = clz_Torappu_TipTable
