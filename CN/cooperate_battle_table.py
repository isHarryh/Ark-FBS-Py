# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class enum__Torappu_Battle_Cooperate_EndTileType(object):
    NONE = 0
    MY_SIDE = 1
    MATE_SIDE = 2
    SHARED = 3


class enum__Torappu_Battle_Cooperate_LASTROUNDRESULT(object):
    GOAL = 0
    LOST = 1


class clz_Torappu_Battle_Cooperate_CooperateEndTileInfo(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Battle_Cooperate_CooperateEndTileInfo()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Battle_Cooperate_CooperateEndTileInfo(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Battle_Cooperate_CooperateEndTileInfo
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Battle_Cooperate_CooperateEndTileInfo
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Battle_Cooperate_CooperateEndTileInfo
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_Battle_Cooperate_CooperateEndTileInfoStart(builder):
    builder.StartObject(2)

def clz_Torappu_Battle_Cooperate_CooperateEndTileInfoAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def clz_Torappu_Battle_Cooperate_CooperateEndTileInfoAddDescription(builder, description):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)

def clz_Torappu_Battle_Cooperate_CooperateEndTileInfoEnd(builder):
    return builder.EndObject()



class dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsdict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Battle_Cooperate_CooperateEndTileInfo()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfoStart(builder):
    builder.StartObject(2)

def dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfoAddKey(builder, key):
    builder.PrependInt32Slot(0, key, 0)

def dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfoAddValue(builder, value):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(value), 0)

def dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfoEnd(builder):
    return builder.EndObject()



class clz_Torappu_Battle_Cooperate_CooperateAheadGoalData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Battle_Cooperate_CooperateAheadGoalData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Battle_Cooperate_CooperateAheadGoalData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Battle_Cooperate_CooperateAheadGoalData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Battle_Cooperate_CooperateAheadGoalData
    def AheadCnt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateAheadGoalData
    def Level(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_Battle_Cooperate_CooperateAheadGoalDataStart(builder):
    builder.StartObject(2)

def clz_Torappu_Battle_Cooperate_CooperateAheadGoalDataAddAheadCnt(builder, aheadCnt):
    builder.PrependInt32Slot(0, aheadCnt, 0)

def clz_Torappu_Battle_Cooperate_CooperateAheadGoalDataAddLevel(builder, level):
    builder.PrependInt32Slot(1, level, 0)

def clz_Torappu_Battle_Cooperate_CooperateAheadGoalDataEnd(builder):
    return builder.EndObject()



class dict__enum__Torappu_Battle_Cooperate_LASTROUNDRESULT__int(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = dict__enum__Torappu_Battle_Cooperate_LASTROUNDRESULT__int()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsdict__enum__Torappu_Battle_Cooperate_LASTROUNDRESULT__int(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # dict__enum__Torappu_Battle_Cooperate_LASTROUNDRESULT__int
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # dict__enum__Torappu_Battle_Cooperate_LASTROUNDRESULT__int
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # dict__enum__Torappu_Battle_Cooperate_LASTROUNDRESULT__int
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def dict__enum__Torappu_Battle_Cooperate_LASTROUNDRESULT__intStart(builder):
    builder.StartObject(2)

def dict__enum__Torappu_Battle_Cooperate_LASTROUNDRESULT__intAddKey(builder, key):
    builder.PrependInt32Slot(0, key, 0)

def dict__enum__Torappu_Battle_Cooperate_LASTROUNDRESULT__intAddValue(builder, value):
    builder.PrependInt32Slot(1, value, 0)

def dict__enum__Torappu_Battle_Cooperate_LASTROUNDRESULT__intEnd(builder):
    return builder.EndObject()



class clz_Torappu_Battle_Cooperate_CooperateWaveWeight(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Battle_Cooperate_CooperateWaveWeight()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Battle_Cooperate_CooperateWaveWeight(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Battle_Cooperate_CooperateWaveWeight
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Battle_Cooperate_CooperateWaveWeight
    def Wave(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateWaveWeight
    def Weight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_Battle_Cooperate_CooperateWaveWeightStart(builder):
    builder.StartObject(2)

def clz_Torappu_Battle_Cooperate_CooperateWaveWeightAddWave(builder, wave):
    builder.PrependInt32Slot(0, wave, 0)

def clz_Torappu_Battle_Cooperate_CooperateWaveWeightAddWeight(builder, weight):
    builder.PrependInt32Slot(1, weight, 0)

def clz_Torappu_Battle_Cooperate_CooperateWaveWeightEnd(builder):
    return builder.EndObject()



class dict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeight(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = dict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeight()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsdict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeight(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # dict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeight
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # dict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeight
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # dict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeight
    def Value(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_Battle_Cooperate_CooperateWaveWeight()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # dict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeight
    def ValueLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # dict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeight
    def ValueIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def dict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeightStart(builder):
    builder.StartObject(2)

def dict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeightAddKey(builder, key):
    builder.PrependInt32Slot(0, key, 0)

def dict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeightAddValue(builder, value):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(value), 0)

def dict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeightStartValueVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def dict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeightEnd(builder):
    return builder.EndObject()



class clz_Torappu_Battle_Cooperate_CooperateTeamWeight(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Battle_Cooperate_CooperateTeamWeight()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Battle_Cooperate_CooperateTeamWeight(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Battle_Cooperate_CooperateTeamWeight
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Battle_Cooperate_CooperateTeamWeight
    def TeamName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Battle_Cooperate_CooperateTeamWeight
    def Weight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_Battle_Cooperate_CooperateTeamWeightStart(builder):
    builder.StartObject(2)

def clz_Torappu_Battle_Cooperate_CooperateTeamWeightAddTeamName(builder, teamName):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(teamName), 0)

def clz_Torappu_Battle_Cooperate_CooperateTeamWeightAddWeight(builder, weight):
    builder.PrependInt32Slot(1, weight, 0)

def clz_Torappu_Battle_Cooperate_CooperateTeamWeightEnd(builder):
    return builder.EndObject()



class clz_Torappu_Battle_Cooperate_CooperateTeamPlayer(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Battle_Cooperate_CooperateTeamPlayer()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Battle_Cooperate_CooperateTeamPlayer(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Battle_Cooperate_CooperateTeamPlayer
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Battle_Cooperate_CooperateTeamPlayer
    def Forward(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Battle_Cooperate_CooperateTeamPlayer
    def Goalkeeper(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Battle_Cooperate_CooperateTeamPlayer
    def Muscleman(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_Battle_Cooperate_CooperateTeamPlayerStart(builder):
    builder.StartObject(3)

def clz_Torappu_Battle_Cooperate_CooperateTeamPlayerAddForward(builder, forward):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(forward), 0)

def clz_Torappu_Battle_Cooperate_CooperateTeamPlayerAddGoalkeeper(builder, goalkeeper):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(goalkeeper), 0)

def clz_Torappu_Battle_Cooperate_CooperateTeamPlayerAddMuscleman(builder, muscleman):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(muscleman), 0)

def clz_Torappu_Battle_Cooperate_CooperateTeamPlayerEnd(builder):
    return builder.EndObject()



class dict__string__clz_Torappu_Battle_Cooperate_CooperateTeamPlayer(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = dict__string__clz_Torappu_Battle_Cooperate_CooperateTeamPlayer()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsdict__string__clz_Torappu_Battle_Cooperate_CooperateTeamPlayer(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # dict__string__clz_Torappu_Battle_Cooperate_CooperateTeamPlayer
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # dict__string__clz_Torappu_Battle_Cooperate_CooperateTeamPlayer
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # dict__string__clz_Torappu_Battle_Cooperate_CooperateTeamPlayer
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_Battle_Cooperate_CooperateTeamPlayer()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def dict__string__clz_Torappu_Battle_Cooperate_CooperateTeamPlayerStart(builder):
    builder.StartObject(2)

def dict__string__clz_Torappu_Battle_Cooperate_CooperateTeamPlayerAddKey(builder, key):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)

def dict__string__clz_Torappu_Battle_Cooperate_CooperateTeamPlayerAddValue(builder, value):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(value), 0)

def dict__string__clz_Torappu_Battle_Cooperate_CooperateTeamPlayerEnd(builder):
    return builder.EndObject()



class dict__string__string(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = dict__string__string()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsdict__string__string(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # dict__string__string
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # dict__string__string
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # dict__string__string
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def dict__string__stringStart(builder):
    builder.StartObject(2)

def dict__string__stringAddKey(builder, key):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)

def dict__string__stringAddValue(builder, value):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(value), 0)

def dict__string__stringEnd(builder):
    return builder.EndObject()



class clz_Torappu_Battle_Cooperate_CooperateModeBattleData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Battle_Cooperate_CooperateModeBattleData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Battle_Cooperate_CooperateModeBattleData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def CostTransferred(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def GetMaxMsgCntInOneUpdate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def EndTileInfo(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = dict__enum__Torappu_Battle_Cooperate_EndTileType__clz_Torappu_Battle_Cooperate_CooperateEndTileInfo()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def EndTileInfoLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def EndTileInfoIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballAheadGoalCntFactor(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_Battle_Cooperate_CooperateAheadGoalData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballAheadGoalCntFactorLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballAheadGoalCntFactorIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballHardTypeFactor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballLastRoundResultFactor(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = dict__enum__Torappu_Battle_Cooperate_LASTROUNDRESULT__int()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballLastRoundResultFactorLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballLastRoundResultFactorIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballLevelOfWaveFactor(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = dict__int__list_clz_Torappu_Battle_Cooperate_CooperateWaveWeight()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballLevelOfWaveFactorLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballLevelOfWaveFactorIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        return o == 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballTeamWeights(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_Battle_Cooperate_CooperateTeamWeight()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballTeamWeightsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballTeamWeightsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        return o == 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballTeamPlayers(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = dict__string__clz_Torappu_Battle_Cooperate_CooperateTeamPlayer()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballTeamPlayersLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballTeamPlayersIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        return o == 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballPlayersName(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = dict__string__string()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballPlayersNameLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_Battle_Cooperate_CooperateModeBattleData
    def FootballPlayersNameIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        return o == 0

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataStart(builder):
    builder.StartObject(10)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddCostTransferred(builder, costTransferred):
    builder.PrependInt32Slot(0, costTransferred, 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddGetMaxMsgCntInOneUpdate(builder, getMaxMsgCntInOneUpdate):
    builder.PrependInt32Slot(1, getMaxMsgCntInOneUpdate, 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddEndTileInfo(builder, endTileInfo):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(endTileInfo), 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataStartEndTileInfoVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddFootballAheadGoalCntFactor(builder, footballAheadGoalCntFactor):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(footballAheadGoalCntFactor), 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataStartFootballAheadGoalCntFactorVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddFootballHardTypeFactor(builder, footballHardTypeFactor):
    builder.PrependInt32Slot(4, footballHardTypeFactor, 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddFootballLastRoundResultFactor(builder, footballLastRoundResultFactor):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(footballLastRoundResultFactor), 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataStartFootballLastRoundResultFactorVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddFootballLevelOfWaveFactor(builder, footballLevelOfWaveFactor):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(footballLevelOfWaveFactor), 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataStartFootballLevelOfWaveFactorVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddFootballTeamWeights(builder, footballTeamWeights):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(footballTeamWeights), 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataStartFootballTeamWeightsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddFootballTeamPlayers(builder, footballTeamPlayers):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(footballTeamPlayers), 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataStartFootballTeamPlayersVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataAddFootballPlayersName(builder, footballPlayersName):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(footballPlayersName), 0)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataStartFootballPlayersNameVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_Battle_Cooperate_CooperateModeBattleDataEnd(builder):
    return builder.EndObject()

ROOT_TYPE = clz_Torappu_Battle_Cooperate_CooperateModeBattleData
