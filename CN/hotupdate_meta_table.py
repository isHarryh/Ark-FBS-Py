# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class enum__Torappu_HotUpdateMetaPicData_PicType(object):
    NONE = 0
    SKIN = 1


class clz_Torappu_HotUpdateMetaPicData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_HotUpdateMetaPicData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_HotUpdateMetaPicData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_HotUpdateMetaPicData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_HotUpdateMetaPicData
    def PicId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_HotUpdateMetaPicData
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_HotUpdateMetaPicData
    def SortId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_HotUpdateMetaPicData
    def StartTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_HotUpdateMetaPicData
    def EndTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_HotUpdateMetaPicData
    def TextList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # clz_Torappu_HotUpdateMetaPicData
    def TextListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_HotUpdateMetaPicData
    def TextListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

    # clz_Torappu_HotUpdateMetaPicData
    def PicType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_HotUpdateMetaPicData
    def LogoId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_HotUpdateMetaPicData
    def Color(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_HotUpdateMetaPicDataStart(builder):
    builder.StartObject(9)

def clz_Torappu_HotUpdateMetaPicDataAddPicId(builder, picId):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(picId), 0)

def clz_Torappu_HotUpdateMetaPicDataAddGroupId(builder, groupId):
    builder.PrependInt32Slot(1, groupId, 0)

def clz_Torappu_HotUpdateMetaPicDataAddSortId(builder, sortId):
    builder.PrependInt32Slot(2, sortId, 0)

def clz_Torappu_HotUpdateMetaPicDataAddStartTime(builder, startTime):
    builder.PrependInt64Slot(3, startTime, 0)

def clz_Torappu_HotUpdateMetaPicDataAddEndTime(builder, endTime):
    builder.PrependInt64Slot(4, endTime, 0)

def clz_Torappu_HotUpdateMetaPicDataAddTextList(builder, textList):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(textList), 0)

def clz_Torappu_HotUpdateMetaPicDataStartTextListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_HotUpdateMetaPicDataAddPicType(builder, picType):
    builder.PrependInt32Slot(6, picType, 0)

def clz_Torappu_HotUpdateMetaPicDataAddLogoId(builder, logoId):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(logoId), 0)

def clz_Torappu_HotUpdateMetaPicDataAddColor(builder, color):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(color), 0)

def clz_Torappu_HotUpdateMetaPicDataEnd(builder):
    return builder.EndObject()



class clz_Torappu_HotUpdateMetaMovieData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_HotUpdateMetaMovieData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_HotUpdateMetaMovieData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_HotUpdateMetaMovieData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_HotUpdateMetaMovieData
    def VideoId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_HotUpdateMetaMovieData
    def VideoPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_HotUpdateMetaMovieData
    def EndTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_HotUpdateMetaMovieData
    def SortId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_HotUpdateMetaMovieDataStart(builder):
    builder.StartObject(4)

def clz_Torappu_HotUpdateMetaMovieDataAddVideoId(builder, videoId):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(videoId), 0)

def clz_Torappu_HotUpdateMetaMovieDataAddVideoPath(builder, videoPath):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(videoPath), 0)

def clz_Torappu_HotUpdateMetaMovieDataAddEndTime(builder, endTime):
    builder.PrependInt64Slot(2, endTime, 0)

def clz_Torappu_HotUpdateMetaMovieDataAddSortId(builder, sortId):
    builder.PrependInt32Slot(3, sortId, 0)

def clz_Torappu_HotUpdateMetaMovieDataEnd(builder):
    return builder.EndObject()



class clz_Torappu_HotUpdateMetaTable(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_HotUpdateMetaTable()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_HotUpdateMetaTable(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_HotUpdateMetaTable
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_HotUpdateMetaTable
    def PicList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = clz_Torappu_HotUpdateMetaPicData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_HotUpdateMetaTable
    def PicListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_HotUpdateMetaTable
    def PicListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # clz_Torappu_HotUpdateMetaTable
    def MovieInfo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = clz_Torappu_HotUpdateMetaMovieData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def clz_Torappu_HotUpdateMetaTableStart(builder):
    builder.StartObject(2)

def clz_Torappu_HotUpdateMetaTableAddPicList(builder, picList):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(picList), 0)

def clz_Torappu_HotUpdateMetaTableStartPicListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def clz_Torappu_HotUpdateMetaTableAddMovieInfo(builder, movieInfo):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(movieInfo), 0)

def clz_Torappu_HotUpdateMetaTableEnd(builder):
    return builder.EndObject()

ROOT_TYPE = clz_Torappu_HotUpdateMetaTable
